/*
 * ov4682_tables.h - table header for YUV camera sensor OV4682 driver.
 *
 * Copyright (C) 2014 NVIDIA Corporation.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
 * 02111-1307, USA
 */

#ifndef OV4682_I2C_TABLES
#define OV4682_I2C_TABLES

struct ov4682_reg {
    u16 addr;
    u16 val;
};

#define OV4682_TABLE_WAIT_MS 0
#define OV4682_TABLE_END 1

static struct ov4682_reg ov4682_mode_2688x1520_initial[] = {
    {0x0103, 0x01},
    {0x3638, 0x00},
    {0x0300, 0x00},
    {0x0302, 0x54}, // 1008Mbps MIPI_CLK
    {0x0303, 0x00}, //
    {0x0304, 0x03},
    {0x0305, 0x01},
    {0x0306, 0x01},
    {0x030b, 0x00},
    {0x030d, 0x3c},
    {0x030e, 0x02},
    {0x030f, 0x02},
    {0x0312, 0x01},
    {0x031e, 0x00},
    {0x3000, 0x20},
    {0x3002, 0xC0}, // Output VSYNC/HREF
    {0x3018, 0x72},
    {0x3020, 0x93},
    {0x3021, 0x03},
    {0x3022, 0x01},
    {0x3031, 0x0a},
    {0x3305, 0xf1},
    {0x3307, 0x04},
    {0x3309, 0x29},
    {0x3500, 0x00},
    {0x3501, 0x60},
    {0x3502, 0x00},
    {0x3503, 0x04},
    {0x3504, 0x00},
    {0x3505, 0x00},
    {0x3506, 0x00},
    {0x3507, 0x00},
    {0x3508, 0x00},
    {0x3509, 0x80}, //1x analog gain
    {0x350a, 0x00},
    {0x350b, 0x00},
    {0x350c, 0x00},
    {0x350d, 0x00},
    {0x350e, 0x00},
    {0x350f, 0x80},
    {0x3510, 0x00},
    {0x3511, 0x00},
    {0x3512, 0x00},
    {0x3513, 0x00},
    {0x3514, 0x00},
    {0x3515, 0x80},
    {0x3516, 0x00},
    {0x3517, 0x00},
    {0x3518, 0x00},
    {0x3519, 0x00},
    {0x351a, 0x00},
    {0x351b, 0x80},
    {0x351c, 0x00},
    {0x351d, 0x00},
    {0x351e, 0x00},
    {0x351f, 0x00},
    {0x3520, 0x00},
    {0x3521, 0x80},
    {0x3522, 0x08},
    {0x3524, 0x08},
    {0x3526, 0x08},
    {0x3528, 0x08},
    {0x352a, 0x08},
    {0x3602, 0x00},
    {0x3604, 0x02},
    {0x3605, 0x00},
    {0x3606, 0x00},
    {0x3607, 0x00},
    {0x3609, 0x12},
    {0x360a, 0x40},
    {0x360c, 0x08},
    {0x360f, 0xe5},
    {0x3608, 0x8f},
    {0x3611, 0x00},
    {0x3613, 0xf7},
    {0x3616, 0x58},
    {0x3619, 0x99},
    {0x361b, 0x60},
    {0x361c, 0x7a},
    {0x361e, 0x79},
    {0x361f, 0x02},
    {0x3632, 0x00},
    {0x3633, 0x10},
    {0x3634, 0x10},
    {0x3635, 0x10},
    {0x3636, 0x15},
    {0x3646, 0x86},
    {0x364a, 0x0b},
    {0x3700, 0x17},
    {0x3701, 0x22},
    {0x3703, 0x10},
    {0x370a, 0x37},
    {0x3705, 0x00},
    {0x3706, 0x63},
    {0x3709, 0x3c},
    {0x370b, 0x01},
    {0x370c, 0x30},
    {0x3710, 0x24},
    {0x3711, 0x0c},
    {0x3716, 0x00},
    {0x3720, 0x28},
    {0x3729, 0x7b},
    {0x372a, 0x84},
    {0x372b, 0xbd},
    {0x372c, 0xbc},
    {0x372e, 0x52},
    {0x373c, 0x0e},
    {0x373e, 0x33},
    {0x3743, 0x10},
    {0x3744, 0x88},
    {0x374a, 0x43},
    {0x374c, 0x00},
    {0x374e, 0x23},
    {0x3751, 0x7b},
    {0x3752, 0x84},
    {0x3753, 0xbd},
    {0x3754, 0xbc},
    {0x3756, 0x52},
    {0x375c, 0x00},
    {0x3760, 0x00},
    {0x3761, 0x00},
    {0x3762, 0x00},
    {0x3763, 0x00},
    {0x3764, 0x00},
    {0x3767, 0x04},
    {0x3768, 0x04},
    {0x3769, 0x08},
    {0x376a, 0x08},
    {0x376b, 0x20},
    {0x376c, 0x00},
    {0x376d, 0x00},
    {0x376e, 0x00},
    {0x3773, 0x00},
    {0x3774, 0x51},
    {0x3776, 0xbd},
    {0x3777, 0xbd},
    {0x3781, 0x18},
    {0x3783, 0x25},
    {0x3800, 0x00},
    {0x3801, 0x08},
    {0x3802, 0x00},
    {0x3803, 0x04},
    {0x3804, 0x0a},
    {0x3805, 0x97},
    {0x3806, 0x05},
    {0x3807, 0xfb},
    {0x3808, 0x0a},
    {0x3809, 0x80},
    {0x380a, 0x05},
    {0x380b, 0xf0},
    {0x380c, 0x03}, //insert HTS for 30fps, 360Mbps data rate
    {0x380d, 0xAB}, //
    {0x380e, 0x10},
    {0x380f, 0xA3},
    {0x3810, 0x00},
    {0x3811, 0x08},
    {0x3812, 0x00},
    {0x3813, 0x04},
    {0x3814, 0x01},
    {0x3815, 0x01},
    {0x3819, 0x01},
    {0x3820, 0x00},
    {0x3821, 0x06},
    {0x3829, 0x00},
    {0x382a, 0x01},
    {0x382b, 0x01},
    {0x382d, 0x7f},
    {0x3830, 0x04},
    {0x3836, 0x01},
    {0x3841, 0x02},
    {0x3846, 0x08},
    {0x3847, 0x07},
    {0x3d85, 0x36},
    {0x3d8c, 0x71},
    {0x3d8d, 0xcb},
    {0x3f0a, 0x00},
    {0x4000, 0x71},
    {0x4001, 0x40},
    {0x4002, 0x04},
    {0x4003, 0x14},
    {0x400e, 0x00},
    {0x4011, 0x00},
    {0x401a, 0x00},
    {0x401b, 0x00},
    {0x401c, 0x00},
    {0x401d, 0x00},
    {0x401f, 0x00},
    {0x4020, 0x00},
    {0x4021, 0x10},
    {0x4022, 0x07},
    {0x4023, 0xcf},
    {0x4024, 0x09},
    {0x4025, 0x60},
    {0x4026, 0x09},
    {0x4027, 0x6f},
    {0x4028, 0x00},
    {0x4029, 0x02},
    {0x402a, 0x06},
    {0x402b, 0x04},
    {0x402c, 0x02},
    {0x402d, 0x02},
    {0x402e, 0x0e},
    {0x402f, 0x04},
    {0x4302, 0xff},
    {0x4303, 0xff},
    {0x4304, 0x00},
    {0x4305, 0x00},
    {0x4306, 0x00},
    {0x4308, 0x02},
    {0x4500, 0x6c},
    {0x4501, 0xc4},
    {0x4502, 0x40},
    {0x4503, 0x02},
    {0x4601, 0xA6},
    {0x4800, 0x24}, //bit[5] MIPI gated clock control
    {0x4813, 0x08},
    {0x481f, 0x40},
    {0x4829, 0x78},
    {0x4837, 0x10}, //global timing for 360Mbps
    {0x4b00, 0x2a},
    {0x4b0d, 0x00},
    {0x4d00, 0x04},
    {0x4d01, 0x42},
    {0x4d02, 0xd1},
    {0x4d03, 0x93},
    {0x4d04, 0xf5},
    {0x4d05, 0xc1},
    {0x5000, 0xf3},
    {0x5001, 0x11},
    {0x5004, 0x00},
    {0x500a, 0x00},
    {0x500b, 0x00},
    {0x5032, 0x00},
    {0x5040, 0x00},
    {0x5050, 0x0c},
    {0x5500, 0x00},
    {0x5501, 0x10},
    {0x5502, 0x01},
    {0x5503, 0x0f},
    {0x8000, 0x00},
    {0x8001, 0x00},
    {0x8002, 0x00},
    {0x8003, 0x00},
    {0x8004, 0x00},
    {0x8005, 0x00},
    {0x8006, 0x00},
    {0x8007, 0x00},
    {0x8008, 0x00},
    {0x3638, 0x00},
    {0x3105, 0x31},
    {0x301a, 0xf9},
    {0x484b, 0x05},
    {0x4805, 0x03},
    {0x3601, 0x01},

    {0x3745, 0xC0},
    {0x3798, 0x1B},

    {OV4682_TABLE_WAIT_MS, 10}, // wait 10 ms

    {0x3105, 0x11},
    {0x301a, 0xf1},
    {0x4805, 0x00},
    {0x301a, 0xf0},
    {0x3208, 0x00},
    {0x302a, 0x00},
    {0x302a, 0x00},
    {0x302a, 0x00},
    {0x302a, 0x00},
    {0x302a, 0x00},
    {0x3601, 0x00},
    {0x3638, 0x00},
    {0x3208, 0x10},
    {0x3208, 0xa0},
    {0x3b00, 0x04}, // STROBE Mode LED 4
    {0x3b04, 0x00}, // STROBE Width 0
    {0x3b05, 0x80}, // STROBE length as long as possible

    {OV4682_TABLE_END, OV4682_TABLE_END}

};

static struct ov4682_reg ov4682_mode_1280x720_initial[] = {
/*    {0x0103, 0x01},
    {0x3638, 0x00},
    {0x0300, 0x00},
    {0x0302, 0x1E}, //adjust MIPI datarate 360Mbps/lane
    {0x0303, 0x01}, //
    {0x0304, 0x03},
    {0x030b, 0x00},
    {0x030d, 0x1e},
    {0x030e, 0x04},
    {0x030f, 0x01},
    {0x0312, 0x01},
    {0x031e, 0x00},
    {0x3000, 0x20},
    {0x3002, 0x00},
    {0x3018, 0x72},
    {0x3020, 0x93},
    {0x3021, 0x03},
    {0x3022, 0x01},
    {0x3031, 0x0a},
    {0x3305, 0xf1},
    {0x3307, 0x04},
    {0x3309, 0x29},
    {0x3500, 0x00},
    {0x3501, 0x94},
    {0x3502, 0x50},
    {0x3503, 0x04},
    {0x3504, 0x00},
    {0x3505, 0x00},
    {0x3506, 0x00},
    {0x3507, 0x00},
    {0x3508, 0x00},
    {0x3509, 0x80}, //1x analog gain
    {0x350a, 0x00},
    {0x350b, 0x00},
    {0x350c, 0x00},
    {0x350d, 0x00},
    {0x350e, 0x00},
    {0x350f, 0x80},
    {0x3510, 0x00},
    {0x3511, 0x00},
    {0x3512, 0x00},
    {0x3513, 0x00},
    {0x3514, 0x00},
    {0x3515, 0x80},
    {0x3516, 0x00},
    {0x3517, 0x00},
    {0x3518, 0x00},
    {0x3519, 0x00},
    {0x351a, 0x00},
    {0x351b, 0x80},
    {0x351c, 0x00},
    {0x351d, 0x00},
    {0x351e, 0x00},
    {0x351f, 0x00},
    {0x3520, 0x00},
    {0x3521, 0x80},
    {0x3522, 0x08},
    {0x3524, 0x08},
    {0x3526, 0x08},
    {0x3528, 0x08},
    {0x352a, 0x08},
    {0x3602, 0x00},
    {0x3604, 0x02},
    {0x3605, 0x00},
    {0x3606, 0x00},
    {0x3607, 0x00},
    {0x3609, 0x12},
    {0x360a, 0x40},
    {0x360c, 0x08},
    {0x360f, 0xe5},
    {0x3608, 0x8f},
    {0x3611, 0x00},
    {0x3613, 0xf7},
    {0x3616, 0x58},
    {0x3619, 0x99},
    {0x361b, 0x60},
    {0x361c, 0x7a},
    {0x361e, 0x79},
    {0x361f, 0x02},
    {0x3632, 0x05}, // 00
    {0x3633, 0x10},
    {0x3634, 0x10},
    {0x3635, 0x10},
    {0x3636, 0x15},
    {0x3646, 0x86},
    {0x364a, 0x0b},
    {0x3700, 0x17},
    {0x3701, 0x22},
    {0x3703, 0x10},
    {0x370a, 0x37},
    {0x3705, 0x00},
    {0x3706, 0x63},
    {0x3709, 0x3c},
    {0x370b, 0x01},
    {0x370c, 0x30},
    {0x3710, 0x24},
    {0x3711, 0x0c},
    {0x3716, 0x00},
    {0x3720, 0x28},
    {0x3729, 0x7b},
    {0x372a, 0x84},
    {0x372b, 0xbd},
    {0x372c, 0xbc},
    {0x372e, 0x52},
    {0x373c, 0x0e},
    {0x373e, 0x33},
    {0x3743, 0x10},
    {0x3744, 0x88},
    {0x374a, 0x43},
    {0x374c, 0x00},
    {0x374e, 0x23},
    {0x3751, 0x7b},
    {0x3752, 0x84},
    {0x3753, 0xbd},
    {0x3754, 0xbc},
    {0x3756, 0x52},
    {0x375c, 0x00},
    {0x3760, 0x00},
    {0x3761, 0x00},
    {0x3762, 0x00},
    {0x3763, 0x00},
    {0x3764, 0x00},
    {0x3767, 0x04},
    {0x3768, 0x04},
    {0x3769, 0x08},
    {0x376a, 0x08},
    {0x376b, 0x40}, // 20
    {0x376c, 0x00},
    {0x376d, 0x00},
    {0x376e, 0x00},
    {0x3773, 0x00},
    {0x3774, 0x51},
    {0x3776, 0xbd},
    {0x3777, 0xbd},
    {0x3781, 0x18},
    {0x3783, 0x25},
    {0x3800, 0x00},
    {0x3801, 0x48},
    {0x3802, 0x00},
    {0x3803, 0x2c},
    {0x3804, 0x0a},
    {0x3805, 0x57},
    {0x3806, 0x05},
    {0x3807, 0xd3},
    {0x3808, 0x05},
    {0x3809, 0x00},
    {0x380a, 0x02},
    {0x380b, 0xd0},
    {0x380c, 0x06},
    {0x380d, 0x90},
    {0x380e, 0x09},
    {0x380f, 0x4D},
    {0x3810, 0x00},
    {0x3811, 0x04}, // 08
    {0x3812, 0x00},
    {0x3813, 0x02}, // 04
    {0x3814, 0x03}, // 01
    {0x3815, 0x01},
    {0x3819, 0x01},
    {0x3820, 0x10},
    {0x3821, 0x07},
    {0x3829, 0x00},
    {0x382a, 0x03},
    {0x382b, 0x01},
    {0x382d, 0x7f},
    {0x3830, 0x08},
    {0x3836, 0x02},
    {0x3841, 0x02},
    {0x3846, 0x08},
    {0x3847, 0x07},
    {0x3d85, 0x36},
    {0x3d8c, 0x71},
    {0x3d8d, 0xcb},
    {0x3f0a, 0x00},
    {0x4000, 0x71},
    {0x4001, 0x50},
    {0x4002, 0x04},
    {0x4003, 0x14},
    {0x400e, 0x00},
    {0x4011, 0x00},
    {0x401a, 0x00},
    {0x401b, 0x00},
    {0x401c, 0x00},
    {0x401d, 0x00},
    {0x401f, 0x00},
    {0x4020, 0x00},
    {0x4021, 0x10},
    {0x4022, 0x03},
    {0x4023, 0x93},
    {0x4024, 0x04},
    {0x4025, 0xc0},
    {0x4026, 0x04},
    {0x4027, 0xd0},
    {0x4028, 0x00},
    {0x4029, 0x02},
    {0x402a, 0x06},
    {0x402b, 0x04},
    {0x402c, 0x02},
    {0x402d, 0x02},
    {0x402e, 0x0e},
    {0x402f, 0x04},
    {0x4302, 0xff},
    {0x4303, 0xff},
    {0x4304, 0x00},
    {0x4305, 0x00},
    {0x4306, 0x00},
    {0x4308, 0x02},
    {0x4500, 0x6c},
    {0x4501, 0xc4},
    {0x4502, 0x44},
    {0x4503, 0x02},
    {0x4601, 0x4F},
    {0x4800, 0x24}, //bit[5] MIPI gated clock control
    {0x4813, 0x08},
    {0x481f, 0x40},
    {0x4829, 0x78},
    {0x4837, 0x2C}, //global timing for 360Mbps
    {0x4b00, 0x2a},
    {0x4b0d, 0x00},
    {0x4d00, 0x04},
    {0x4d01, 0x42},
    {0x4d02, 0xd1},
    {0x4d03, 0x93},
    {0x4d04, 0xf5},
    {0x4d05, 0xc1},
    {0x5000, 0xf3},
    {0x5001, 0x11},
    {0x5004, 0x00},
    {0x500a, 0x00},
    {0x500b, 0x00},
    {0x5032, 0x00},
    {0x5040, 0x00},
    {0x5050, 0x3c},
    {0x5500, 0x00},
    {0x5501, 0x10},
    {0x5502, 0x01},
    {0x5503, 0x0f},
    {0x8000, 0x00},
    {0x8001, 0x00},
    {0x8002, 0x00},
    {0x8003, 0x00},
    {0x8004, 0x00},
    {0x8005, 0x00},
    {0x8006, 0x00},
    {0x8007, 0x00},
    {0x8008, 0x00},
    {0x3638, 0x00},
    {0x3105, 0x31},
    {0x301a, 0xf9},
    {0x484b, 0x05},
    {0x4805, 0x03},
    {0x3601, 0x01},

    {0x3745, 0xC0},
    {0x3798, 0x1B},

    {0x0100, 0x01},

    {OV4682_TABLE_WAIT_MS, 10},

    {0x3105, 0x11},
    {0x301a, 0xf1},
    {0x4805, 0x00},
    {0x301a, 0xf0},
    {0x3208, 0x00},
    {0x302a, 0x00},
    {0x302a, 0x00},
    {0x302a, 0x00},
    {0x302a, 0x00},
    {0x302a, 0x00},
    {0x3601, 0x00},
    {0x3638, 0x00},
    {0x3208, 0x10},
    {0x3208, 0xa0},

    {OV4682_TABLE_END, 0}*/

	{0x0103, 0x01},
	{0x3638, 0x00},
	{0x0300, 0x00},	//;for 504Mbps 
	{0x0301, 0x00},
	{0x0302, 0x54},
	{0x0303, 0x01},
	{0x0304, 0x03},
	{0x030A, 0x00},
	{0x030b, 0x00},	//;SCLK = 120MHz 
	{0x030d, 0x3C},
	{0x030e, 0x04},
	{0x030f, 0x01},
	{0x0312, 0x01},
	{0x031e, 0x00},
	{0x3000, 0x20},
	{0x3002, 0xC0},	//;output VSYNC/HREF
	{0x3018, 0x72},
	{0x3020, 0x93},
	{0x3021, 0x03},
	{0x3022, 0x01},
	{0x3031, 0x0a},
	{0x3305, 0xf1},
	{0x3307, 0x04},
	{0x3309, 0x29},
	{0x3500, 0x00},	//;exposure = 16.6ms 
	{0x3501, 0x94},
	{0x3502, 0x30},
	{0x3503, 0x04},
	{0x3504, 0x00},
	{0x3505, 0x00},
	{0x3506, 0x00},
	{0x3507, 0x00},
	{0x3508, 0x00}, //	;1x gain
	{0x3509, 0x80},
	{0x350a, 0x00},
	{0x350b, 0x00},
	{0x350c, 0x00},
	{0x350d, 0x00},
	{0x350e, 0x00},
	{0x350f, 0x80},
	{0x3510, 0x00},
	{0x3511, 0x00},
	{0x3512, 0x00},
	{0x3513, 0x00},
	{0x3514, 0x00}, 
	{0x3515, 0x80},
	{0x3516, 0x00},
	{0x3517, 0x00},
	{0x3518, 0x00},
	{0x3519, 0x00},
	{0x351a, 0x00}, 
	{0x351b, 0x80},
	{0x351c, 0x00},
	{0x351d, 0x00},
	{0x351e, 0x00},
	{0x351f, 0x00}, 
	{0x3520, 0x00},
	{0x3521, 0x80},
	{0x3522, 0x08},
	{0x3524, 0x08},
	{0x3526, 0x08},
	{0x3528, 0x08},
	{0x352a, 0x08}, 
	{0x3602, 0x00},
	{0x3604, 0x02},
	{0x3605, 0x00},
	{0x3606, 0x00},
	{0x3607, 0x00},
	{0x3609, 0x12}, 
	{0x360a, 0x40},
	{0x360c, 0x08},
	{0x360f, 0xe5},
	{0x3608, 0x8f},
	{0x3611, 0x00},
	{0x3613, 0xf7},
	{0x3616, 0x58},
	{0x3619, 0x99},
	{0x361b, 0x60},
	{0x361c, 0x7a},
	{0x361e, 0x79},
	{0x361f, 0x02},
	{0x3632, 0x05},
	{0x3633, 0x10},
	{0x3634, 0x10},
	{0x3635, 0x10},
	{0x3636, 0x15},
	{0x3646, 0x86},
	{0x364a, 0x0b},
	{0x3700, 0x17},
	{0x3701, 0x22},
	{0x3703, 0x10},
	{0x370a, 0x37},
	{0x3705, 0x00},
	{0x3706, 0x63},
	{0x3709, 0x3c},
	{0x370b, 0x01},
	{0x370c, 0x30},
	{0x3710, 0x24},
	{0x3711, 0x0c},
	{0x3716, 0x00},
	{0x3720, 0x28},
	{0x3729, 0x7b},
	{0x372a, 0x84},
	{0x372b, 0xbd},
	{0x372c, 0xbc},
	{0x372e, 0x52},
	{0x373c, 0x0e},
	{0x373e, 0x33},
	{0x3743, 0x10},
	{0x3744, 0x88},
	{0x374a, 0x43},
	{0x374c, 0x00},
	{0x374e, 0x23},
	{0x3751, 0x7b},
	{0x3752, 0x84},
	{0x3753, 0xbd},
	{0x3754, 0xbc},
	{0x3756, 0x52},
	{0x375c, 0x00},
	{0x3760, 0x00},
	{0x3761, 0x00},
	{0x3762, 0x00},
	{0x3763, 0x00},
	{0x3764, 0x00},
	{0x3767, 0x04},
	{0x3768, 0x04},
	{0x3769, 0x08},
	{0x376a, 0x08},
	{0x376b, 0x40}, 
	{0x376c, 0x00},
	{0x376d, 0x00},
	{0x376e, 0x00},
	{0x3773, 0x00},
	{0x3774, 0x51},
	{0x3776, 0xbd},
	{0x3777, 0xbd},
	{0x3781, 0x18},
	{0x3783, 0x25},
	{0x3800, 0x00},
	{0x3801, 0x48},
	{0x3802, 0x00},
	{0x3803, 0x2c},
	{0x3804, 0x0a},
	{0x3805, 0x57},
	{0x3806, 0x05},
	{0x3807, 0xd3},
	{0x3808, 0x05},
	{0x3809, 0x00},
	{0x380a, 0x02},
	{0x380b, 0xd0},
	{0x380c, 0x03}, // 	;shortest read out timing 5.04ms
	{0x380d, 0x48},
	{0x380e, 0x12}, //	;for 30fps 
	{0x380f, 0x91},
	{0x3810, 0x00},
	{0x3811, 0x04},
	{0x3812, 0x00},
	{0x3813, 0x02},
	{0x3814, 0x03},
	{0x3815, 0x01},
	{0x3819, 0x01},
	{0x3820, 0x10},
	{0x3821, 0x07},
	{0x3829, 0x00},
	{0x382a, 0x03},
	{0x382b, 0x01},
	{0x382d, 0x7f},
	{0x3830, 0x08},
	{0x3836, 0x02},
	{0x3841, 0x02},
	{0x3846, 0x08},
	{0x3847, 0x07},
	{0x3d85, 0x36},
	{0x3d8c, 0x71},
	{0x3d8d, 0xcb},
	{0x3f0a, 0x00},
	{0x4000, 0x71},
	{0x4001, 0x50},
	{0x4002, 0x04},
	{0x4003, 0x14},
	{0x400e, 0x00},
	{0x4011, 0x00},
	{0x401a, 0x00},
	{0x401b, 0x00},
	{0x401c, 0x00},
	{0x401d, 0x00},
	{0x401f, 0x00},
	{0x4020, 0x00},
	{0x4021, 0x10},
	{0x4022, 0x03},
	{0x4023, 0x93},
	{0x4024, 0x04},
	{0x4025, 0xc0},
	{0x4026, 0x04},
	{0x4027, 0xd0},
	{0x4028, 0x00},
	{0x4029, 0x02},
	{0x402a, 0x06},
	{0x402b, 0x04},
	{0x402c, 0x02},
	{0x402d, 0x02},
	{0x402e, 0x0e},
	{0x402f, 0x04},
	{0x4302, 0xff},
	{0x4303, 0xff},
	{0x4304, 0x00},
	{0x4305, 0x00},
	{0x4306, 0x00},
	{0x4308, 0x03},
	{0x4500, 0x6c},
	{0x4501, 0xc4},
	{0x4502, 0x44},
	{0x4503, 0x02},
	{0x4601, 0x4F},
	{0x4800, 0x04},
	{0x4813, 0x08},
	{0x481f, 0x40},
	{0x4829, 0x78},
	{0x4837, 0x20},	//;for 504Mbps 
	{0x4b00, 0x2a},
	{0x4b0d, 0x00},
	{0x4d00, 0x04},
	{0x4d01, 0x42},
	{0x4d02, 0xd1},
	{0x4d03, 0x93},
	{0x4d04, 0xf5},
	{0x4d05, 0xc1},
	{0x5000, 0xf3},
	{0x5001, 0x11},
	{0x5004, 0x00},
	{0x500a, 0x00},
	{0x500b, 0x00},
	{0x5032, 0x00},
	{0x5040, 0x00},
	{0x5050, 0x3c},
	{0x5500, 0x00},
	{0x5501, 0x10},
	{0x5502, 0x01},
	{0x5503, 0x0f},
	{0x8000, 0x00},
	{0x8001, 0x00},
	{0x8002, 0x00},
	{0x8003, 0x00},
	{0x8004, 0x00},
	{0x8005, 0x00},
	{0x8006, 0x00},
	{0x8007, 0x00},
	{0x8008, 0x00},
	{0x3638, 0x00}, 
	{0x3105, 0x31},
	{0x301a, 0xf9},
	{0x484b, 0x05}, 
	{0x4805, 0x03},
	{0x3601, 0x01},

//;delay 10ms
    {OV4682_TABLE_WAIT_MS, 10},
	{0x3105, 0x11},
	{0x301a, 0xf1},
	{0x4805, 0x00},
	{0x301a, 0xf0},
	{0x3208, 0x00},
	{0x302a, 0x00},
	{0x302a, 0x00},
	{0x302a, 0x00},
	{0x302a, 0x00},
	{0x302a, 0x00},
	{0x3601, 0x00},
	{0x3638, 0x00},
	{0x3208, 0x10},
	{0x3208, 0xa0},
	{0x3745, 0xc0},
	{0x3798, 0x1b},
        {0x3b00, 0x04}, // STROBE Mode LED 4
        {0x3b04, 0x00}, // STROBE Width 0
        {0x3b05, 0x80}, // STROBE length as long as possible
    {OV4682_TABLE_END, 0}
};

static struct ov4682_reg ov4682_mode_2688x1520_switch[] = {
    {0x3208, 0x01}, // group 1 hold start

    {0x3632, 0x00},
    {0x376b, 0x20},

    {0x3800, 0x00},
    {0x3801, 0x08},
    {0x3802, 0x00},
    {0x3803, 0x04},
    {0x3804, 0x0a},
    {0x3805, 0x97},
    {0x3806, 0x05},
    {0x3807, 0xfb},
    {0x3808, 0x0a},
    {0x3809, 0x80},
    {0x380a, 0x05},
    {0x380b, 0xf0},
    {0x380c, 0x03}, //insert HTS for 30fps, 360Mbps data rate
    {0x380d, 0xAB}, //
    {0x380e, 0x10},
    {0x380f, 0xA3},

    {0x3811, 0x08},
    {0x3813, 0x04},
    {0x3814, 0x01},

    {0x3820, 0x00},
    {0x3821, 0x06},
    {0x382a, 0x01},

    {0x3830, 0x04},
    {0x3836, 0x01},

    {0x4001, 0x40},

    {0x4022, 0x07},
    {0x4023, 0xcf},
    {0x4024, 0x09},
    {0x4025, 0x60},
    {0x4026, 0x09},
    {0x4027, 0x6f},

    {0x4502, 0x40},
    {0x4601, 0xA6},
    {0x5050, 0x0c},

    // set exposure time
    {0x3500, 0x00},
    {0x3501, 0x60},
    {0x3502, 0xe0},

    // gain, will be overwritten
    {0x3508, 0x00},
    {0x3509, 0x00},

    {0x3208, 0x11}, // group 1 hold end
    {0x3208, 0xe1}, // group 1 quick launch

    {OV4682_TABLE_END, 0}
};

static struct ov4682_reg ov4682_mode_1280x720_switch[] = {
    {0x3208, 0x00}, // group 0 hold start

    {0x3632, 0x05},
    {0x376b, 0x40},

    {0x3800, 0x00},
    {0x3801, 0x48},
    {0x3802, 0x00},
    {0x3803, 0x2c},
    {0x3804, 0x0a},
    {0x3805, 0x57},
    {0x3806, 0x05},
    {0x3807, 0xd3},
    {0x3808, 0x05},
    {0x3809, 0x00},
    {0x380a, 0x02},
    {0x380b, 0xd0},
    {0x380c, 0x03}, // 03
    {0x380d, 0x48}, // 48
    {0x380e, 0x12},
    {0x380f, 0x91},

    {0x3811, 0x04},
    {0x3813, 0x02},
    {0x3814, 0x03},

    {0x3820, 0x10},
    {0x3821, 0x07},
    {0x382a, 0x03},

    {0x3830, 0x08},
    {0x3836, 0x02},

    {0x4001, 0x50},

    {0x4022, 0x03},
    {0x4023, 0x93},
    {0x4024, 0x04},
    {0x4025, 0xc0},
    {0x4026, 0x04},
    {0x4027, 0xd0},

    {0x4502, 0x44},
    {0x4601, 0x4F},
    {0x5050, 0x3c},

    // set exposure time
    {0x3500, 0x00},
    {0x3501, 0x60},
    {0x3502, 0xe0},

    // gain, will be overwritten
    {0x3508, 0x00},
    {0x3509, 0x00},

    {0x3208, 0x10}, // group 0 hold end
    {0x3208, 0xe0}, // group 0 quick launch

    {OV4682_TABLE_END, 0}
};

static struct ov4682_reg ov4682_stream_on[] = {
	{0x4805, 0x03},
	{0x0100, 0x01},
	{0x301a, 0xf9},

//;delay 10ms
    {OV4682_TABLE_WAIT_MS, 10},
	{0x301a, 0xf1},
	{0x4805, 0x00},
	{0x301a, 0xf0},
    {OV4682_TABLE_END, 0}
};

#endif
